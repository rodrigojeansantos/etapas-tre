const mongoose = require('mongoose');
const { ObjectId } = mongoose.SchemaTypes;

module.exports.TRANSACTION_NORMAL = 1;
module.exports.TRANSACTION_CHARGEBACK = 3;

module.exports.OPERATION_CREDIT = 'C';
module.exports.OPERATION_DEBIT = 'D';

module.exports.TransactionSchema = new mongoose.Schema({
  applicationId: { type: String },
  campaignId: { type: ObjectId },
  invoiceId: { type: ObjectId },
  partnerId: { type: String },
  partnerName: { type: String },
  userId: { type: String },
  userIdExternal: { type: String },
  userIdAdminExternal: { type: String },
  userName: { type: String },
  userCpf: { type: String },
  operation: { type: String, enum: [this.OPERATION_CREDIT, this.OPERATION_DEBIT] },
  description: { type: String },
  placeId: { type: String },
  placeName: { type: String },
  points: { type: Number },
  value: { type: Number },
  referenceId: { type: String },
  details: { type: Object },
  boughtDate: { type: Date },
  rateUnitary: { type: Number },
  expirationDate: { type: Date },
  expirationNotification: { type: Boolean, default: false },
  coinName: { type: String },
  status: { type: Number, enum: [1, 2, 3] },
  type: {
    type: Number,
    enum: [this.TRANSACTION_NORMAL, this.TRANSACTION_CHARGEBACK],
    default: this.TRANSACTION_NORMAL
  },
  sourceIp: { type: String },
  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now }
});
