const mongoose = require('mongoose')

module.exports.STATUS_CREATED = 'created'
module.exports.STATUS_ANALYZE = 'analyze'
module.exports.STATUS_DUPLICATED = 'duplicated'
module.exports.STATUS_CANCELED = 'canceled'
module.exports.STATUS_APPROVED = 'approved'
module.exports.STATUS_REFUSED = 'refused'
module.exports.STATUS_LIQUID = 'liquid'
module.exports.STATUS_SOLID = 'solid'
module.exports.STATUS_APPROVED_PROGRESS = 'progress'
module.exports.STATUS_TRANSACTION_NOT_FOUND = 'transaction_not_found'

module.exports.InvoiceSchema = new mongoose.Schema({
  projectId: { type: Object, required: true },
  userId: { type: Object, required: true },
  keyAccess: { type: String, required: true },
  sellerCode: { type: String },
  sellerId: { type: Object },
  emailSeller: { type: Boolean, default: false },
  managerId: { type: Object },
  emailManager: { type: Boolean, default: false },
  campaignId: { type: Object },
  serproData: { type: Object },
  serproError: { type: Array },
  parseError: { type: Object },
  issueDate: { type: Date },
  version: { type: Number },
  products: { type: Array },
  observation: String,
  type: { type: String },
  description: { type: String },
  status: {
    type: String,
		enum: [ this.STATUS_CREATED,
			this.STATUS_ANALYZE,
			this.STATUS_DUPLICATED,
			this.STATUS_CANCELED,
			this.STATUS_APPROVED,
			this.STATUS_REFUSED,
			this.STATUS_LIQUID,
			this.STATUS_SOLID,
			this.STATUS_APPROVED_PROGRESS,
			this.STATUS_TRANSACTION_NOT_FOUND ],
    default: this.STATUS_CREATED,
    required: true
  },
  emailIsSend: { type: Boolean, default: false },
  analyticsIsSend: { type: Boolean, default: false },
  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now }
})

